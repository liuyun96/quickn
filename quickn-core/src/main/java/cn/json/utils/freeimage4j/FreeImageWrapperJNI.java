/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cn.json.utils.freeimage4j;

class FreeImageWrapperJNI {
  public final static native void FreeImage_Initialise(boolean jarg1);
  public final static native String FreeImage_GetVersion();
  public final static native String FreeImage_GetCopyrightMessage();
  public final static native long FreeImage_OpenMultiBitmap(int jarg1, String jarg2, boolean jarg3, boolean jarg4, boolean jarg5, int jarg6);
  public final static native boolean FreeImage_CloseMultiBitmap(long jarg1, int jarg2);
  public final static native int FreeImage_GetPageCount(long jarg1);
  public final static native void FreeImage_AppendPage(long jarg1, long jarg2);
  public final static native void FreeImage_InsertPage(long jarg1, int jarg2, long jarg3);
  public final static native void FreeImage_DeletePage(long jarg1, int jarg2);
  public final static native boolean FreeImage_MovePage(long jarg1, int jarg2, int jarg3);
  public final static native int FreeImage_GetFileType(String jarg1, int jarg2);
  public final static native long FreeImage_Load(int jarg1, String jarg2, int jarg3);
  public final static native boolean FreeImage_Save(int jarg1, long jarg2, String jarg3, int jarg4);
  public final static native int FreeImage_GetColorsUsed(long jarg1);
  public final static native int FreeImage_GetBPP(long jarg1);
  public final static native int FreeImage_GetWidth(long jarg1);
  public final static native int FreeImage_GetHeight(long jarg1);
  public final static native int FreeImage_GetPitch(long jarg1);
  public final static native void SetPaletteColor(long jarg1, int jarg2, int jarg3);
  public final static native int GetPaletteColor(long jarg1, int jarg2);
  public final static native boolean FreeImage_IsTransparent(long jarg1);
  public final static native long FreeImage_Allocate(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void FreeImage_Unload(long jarg1);
  public final static native long FreeImage_Rescale(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native long FreeImage_MakeThumbnail(long jarg1, int jarg2, boolean jarg3);
  public final static native boolean FreeImage_AdjustGamma(long jarg1, double jarg2);
  public final static native boolean FreeImage_AdjustBrightness(long jarg1, double jarg2);
  public final static native boolean FreeImage_AdjustContrast(long jarg1, double jarg2);
  public final static native boolean FreeImage_Invert(long jarg1);
  public final static native long FreeImage_RotateClassic(long jarg1, double jarg2);
  public final static native long FreeImage_RotateEx(long jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native boolean FreeImage_FlipHorizontal(long jarg1);
  public final static native boolean FreeImage_FlipVertical(long jarg1);
  public final static native long FreeImage_ConvertTo4Bits(long jarg1);
  public final static native long FreeImage_ConvertTo8Bits(long jarg1);
  public final static native long FreeImage_ConvertToGreyscale(long jarg1);
  public final static native long FreeImage_ConvertTo16Bits555(long jarg1);
  public final static native long FreeImage_ConvertTo16Bits565(long jarg1);
  public final static native long FreeImage_ConvertTo24Bits(long jarg1);
  public final static native long FreeImage_ConvertTo32Bits(long jarg1);
  public final static native long FreeImage_ColorQuantize(long jarg1, int jarg2);
  public final static native long FreeImage_Threshold(long jarg1, short jarg2);
  public final static native long FreeImage_Dither(long jarg1, int jarg2);
  public final static native long FreeImage_ConvertFromRawBits(java.nio.ByteBuffer jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, boolean jarg9);
  public final static native void FreeImage_ConvertToRawBits(java.nio.ByteBuffer jarg1, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, boolean jarg8);
  public final static native java.nio.ByteBuffer FreeImage_GetBits(long jarg1);
  public final static native int GetPixelColor(long jarg1, int jarg2, int jarg3);
  public final static native short GetPixelIndex(long jarg1, int jarg2, int jarg3);
  public final static native void SetPixelColor(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void SetPixelIndex(long jarg1, int jarg2, int jarg3, short jarg4);
  public final static native boolean FreeImage_IsLittleEndian();
  public final static native long FreeImage_Copy(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
}
